// <auto-generated />
using System;
using ConsolidationTool.Data.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsolidationTool.Data.Migrations
{
    [DbContext(typeof(ACT_TAX_INVOICE_CONSOLIDATIONContext))]
    partial class ACT_TAX_INVOICE_CONSOLIDATIONContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.CategorizationDetailsTbl", b =>
                {
                    b.Property<long>("CategorizationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Categorization_Details_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CategorizationDetailsId"), 1L, 1);

                    b.Property<string>("CategorizationDetailsArName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Categorization_Details_Ar_Name");

                    b.Property<string>("CategorizationDetailsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Categorization_Details_Code");

                    b.Property<string>("CategorizationDetailsEnName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Categorization_Details_En_Name");

                    b.Property<long?>("CategorizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("Categorization_ID");

                    b.Property<long?>("FormId")
                        .HasColumnType("bigint")
                        .HasColumnName("Form_ID");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Insert_Date");

                    b.Property<long?>("InsertUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Insert_User_ID");

                    b.Property<long?>("MachineId")
                        .HasColumnType("bigint")
                        .HasColumnName("Machine_ID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Update_User_ID");

                    b.HasKey("CategorizationDetailsId")
                        .HasName("PK_Property_Categorization_Details_Tbl");

                    b.HasIndex("CategorizationId");

                    b.ToTable("Categorization_Details_Tbl", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.CategorizationTbl", b =>
                {
                    b.Property<long>("CategorizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Categorization_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CategorizationId"), 1L, 1);

                    b.Property<string>("CategorizationArName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Categorization_Ar_name");

                    b.Property<string>("CategorizationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Categorization_Code");

                    b.Property<string>("CategorizationEnName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Categorization_En_Name");

                    b.Property<long?>("FormId")
                        .HasColumnType("bigint")
                        .HasColumnName("Form_ID");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Insert_Date");

                    b.Property<long?>("InsertUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Insert_User_ID");

                    b.Property<long?>("MachineId")
                        .HasColumnType("bigint")
                        .HasColumnName("Machine_ID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Update_User_ID");

                    b.HasKey("CategorizationId")
                        .HasName("PK_Property_Categorization_Tbl");

                    b.ToTable("Categorization_Tbl", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.OrganizationTbl", b =>
                {
                    b.Property<long>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Organization_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrganizationId"), 1L, 1);

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Customer_Code");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("Expiry_Date");

                    b.Property<long?>("FormId")
                        .HasColumnType("bigint")
                        .HasColumnName("Form_ID");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Insert_Date");

                    b.Property<long?>("InsertUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Insert_User_ID");

                    b.Property<string>("LicenseCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("License_Code");

                    b.Property<long?>("MachineId")
                        .HasColumnType("bigint")
                        .HasColumnName("Machine_ID");

                    b.Property<bool?>("MultiPropertyYn")
                        .HasColumnType("bit")
                        .HasColumnName("Multi_Property_YN");

                    b.Property<int?>("NoOfProducts")
                        .HasColumnType("int")
                        .HasColumnName("No_Of_Products");

                    b.Property<string>("OrganizationArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Organization_Ar_Name");

                    b.Property<string>("OrganizationEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Organization_En_Name");

                    b.Property<string>("PropertiesNames")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties_Names");

                    b.Property<string>("SysLicenseTypeIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sys_License_Type_IDs");

                    b.Property<bool?>("UnlimitedYn")
                        .HasColumnType("bit")
                        .HasColumnName("Unlimited_YN");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Update_User_ID");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization_Tbl", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.PropertyCategorizationTbl", b =>
                {
                    b.Property<long>("PropertyCategorizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Property_Categorization_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PropertyCategorizationId"), 1L, 1);

                    b.Property<long?>("CategorizationDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("Categorization_Details_ID");

                    b.Property<long?>("CategorizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("Categorization_ID");

                    b.Property<long?>("PropertyId")
                        .HasColumnType("bigint")
                        .HasColumnName("Property_ID");

                    b.HasKey("PropertyCategorizationId")
                        .HasName("PK_Property_Categorization_Tbl_1");

                    b.HasIndex("CategorizationDetailsId");

                    b.HasIndex("CategorizationId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Property_Categorization_Tbl", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.PropertyTbl", b =>
                {
                    b.Property<long>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Property_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PropertyId"), 1L, 1);

                    b.Property<string>("ApiLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("API_Link");

                    b.Property<string>("ApiPassword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("API_Password");

                    b.Property<string>("ApiUsername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("API_Username")
                        .UseCollation("Arabic_CI_AS");

                    b.Property<int>("FormID")
                        .HasColumnType("int");

                    b.Property<long?>("FormId")
                        .HasColumnType("bigint")
                        .HasColumnName("Form_ID");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Insert_Date");

                    b.Property<long?>("InsertUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Insert_User_ID");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("InsertedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-99);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long?>("MachineId")
                        .HasColumnType("bigint")
                        .HasColumnName("Machine_ID");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("Organization_ID");

                    b.Property<string>("PropertyArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Property_Ar_Name")
                        .UseCollation("Arabic_CI_AS");

                    b.Property<string>("PropertyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Property_Code")
                        .UseCollation("Arabic_CI_AS");

                    b.Property<string>("PropertyEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Property_En_Name")
                        .UseCollation("Arabic_CI_AS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("Update_User_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.ToTable("Property_Tbl", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.UserTbl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("ActiveUserYn")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DeletedYn")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("FormId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPasswordChanged")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("MachineId")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("PropertyIdLogChanges")
                        .HasColumnType("bigint");

                    b.Property<string>("PropertyIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.CategorizationDetailsTbl", b =>
                {
                    b.HasOne("ConsolidationTool.Data.DBModels.CategorizationTbl", "Categorization")
                        .WithMany("CategorizationDetailsTbls")
                        .HasForeignKey("CategorizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Categorization_Details_Tbl_Categorization_Tbl");

                    b.Navigation("Categorization");
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.PropertyCategorizationTbl", b =>
                {
                    b.HasOne("ConsolidationTool.Data.DBModels.CategorizationDetailsTbl", "CategorizationDetails")
                        .WithMany("PropertyCategorizationTbls")
                        .HasForeignKey("CategorizationDetailsId")
                        .HasConstraintName("FK_Property_Categorization_Tbl_Categorization_Details_Tbl");

                    b.HasOne("ConsolidationTool.Data.DBModels.CategorizationTbl", "Categorization")
                        .WithMany("PropertyCategorizationTbls")
                        .HasForeignKey("CategorizationId")
                        .HasConstraintName("FK_Property_Categorization_Tbl_Categorization_Tbl");

                    b.HasOne("ConsolidationTool.Data.DBModels.PropertyTbl", "Property")
                        .WithMany("PropertyCategorizationTbls")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_Property_Categorization_Tbl_Property_Tbl");

                    b.Navigation("Categorization");

                    b.Navigation("CategorizationDetails");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ConsolidationTool.Data.DBModels.UserTbl", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ConsolidationTool.Data.DBModels.UserTbl", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsolidationTool.Data.DBModels.UserTbl", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ConsolidationTool.Data.DBModels.UserTbl", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.CategorizationDetailsTbl", b =>
                {
                    b.Navigation("PropertyCategorizationTbls");
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.CategorizationTbl", b =>
                {
                    b.Navigation("CategorizationDetailsTbls");

                    b.Navigation("PropertyCategorizationTbls");
                });

            modelBuilder.Entity("ConsolidationTool.Data.DBModels.PropertyTbl", b =>
                {
                    b.Navigation("PropertyCategorizationTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
